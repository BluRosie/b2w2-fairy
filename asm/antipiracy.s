.nds
.arm

BLACK2 equ 1

.open "filesys/arm9.bin", 0x02004000

.orga 0xFC4
.word 0

.org 0x02004620

.if BLACK2 == 1
/*00004620: */.byte 0x00, 0x00, 0x9F, 0xE5, 0x1E, 0xFF, 0x2F, 0xE1, 0x83, 0xA8, 0x00, 0x00, 0x00, 0x00, 0x9F, 0xE5
/*00004630: */.byte 0x1E, 0xFF, 0x2F, 0xE1, 0xCF, 0xB3, 0x00, 0x00, 0x00, 0x00, 0x9F, 0xE5, 0x1E, 0xFF, 0x2F, 0xE1
/*00004640: */.byte 0x27, 0xC1, 0x00, 0x00, 0x00, 0x00, 0x9F, 0xE5, 0x1E, 0xFF, 0x2F, 0xE1, 0x65, 0xAA, 0x00, 0x00
/*00004650: */.byte 0x2C, 0xCA, 0x17, 0x02, 0xFC, 0xD1, 0x70, 0x47, 0xF8, 0xCA, 0x17, 0x02, 0x08, 0xB5, 0xFF, 0xF7
/*00004660: */.byte 0x01, 0x20, 0x70, 0x47
patch:
              .byte                         0x1F, 0x40, 0x2D, 0xE9, 0x20, 0x00, 0x1F, 0xE5, 0x00, 0x10, 0x90, 0xE5
/*00004670: */.byte 0x24, 0x20, 0x1F, 0xE5, 0x02, 0x00, 0x51, 0xE1, 0x00, 0x30, 0xA0, 0x03, 0xB0, 0x30, 0xC0, 0x01
/*00004680: */.byte 0x01, 0x30, 0xA0, 0x03, 0xDE, 0x30, 0xC0, 0x05, 0x38, 0x00, 0x1F, 0xE5, 0x00, 0x10, 0x90, 0xE5
/*00004690: */.byte 0x3C, 0x20, 0x1F, 0xE5, 0x02, 0x00, 0x51, 0xE1, 0x40, 0x30, 0x1F, 0x05, 0x00, 0x30, 0x80, 0x05
/*000046A0: */.byte 0x24, 0x00, 0x8F, 0xE2, 0x00, 0x10, 0x90, 0xE5, 0x01, 0x00, 0x51, 0xE3, 0x1F, 0x80, 0xBD, 0x08
/*000046B0: */.byte 0x00, 0x20, 0x91, 0xE5, 0x04, 0x30, 0x90, 0xE5, 0x03, 0x00, 0x52, 0xE1, 0x08, 0x40, 0x90, 0x05
/*000046C0: */.byte 0x00, 0x40, 0x81, 0x05, 0x0C, 0x00, 0x80, 0xE2, 0xF5, 0xFF, 0xFF, 0xEA, 0xD4, 0x09, 0x18, 0x02
/*000046D0: */.byte 0xA8, 0x0E, 0x18, 0x6A, 0x20, 0x46, 0x00, 0x6A, 0x80, 0x0A, 0x18, 0x02, 0xA8, 0x0E, 0x18, 0x6A
/*000046E0: */.byte 0x2C, 0x46, 0x00, 0x6A, 0x2C, 0x0B, 0x18, 0x02, 0xA8, 0x0E, 0x18, 0x6A, 0x38, 0x46, 0x00, 0x6A
/*000046F0: */.byte 0xA8, 0x43, 0x1A, 0x02, 0x14, 0x3A, 0x1A, 0x6A, 0x44, 0x46, 0x00, 0x6A, 0x01, 0x00, 0x00, 0x00
.else


.byte 0x00, 0x00, 0x9F, 0xE5, 0x1E, 0xFF, 0x2F, 0xE1, 0x83, 0xA8, 0x00, 0x00, 0x00, 0x00, 0x9F, 0xE5
.byte 0x1E, 0xFF, 0x2F, 0xE1, 0xCF, 0xB3, 0x00, 0x00, 0x00, 0x00, 0x9F, 0xE5, 0x1E, 0xFF, 0x2F, 0xE1
.byte 0x27, 0xC1, 0x00, 0x00, 0x00, 0x00, 0x9F, 0xE5, 0x1E, 0xFF, 0x2F, 0xE1, 0x65, 0xAA, 0x00, 0x00
.byte 0x6C, 0xCA, 0x17, 0x02, 0xFC, 0xD1, 0x70, 0x47, 0x38, 0xCB, 0x17, 0x02, 0x08, 0xB5, 0xFF, 0xF7
.byte 0x01, 0x20, 0x70, 0x47

patch:
// for white 2, need to do this better i think.
//push   {r0, r1, r2, r3, r4, lr}  // +0 = 1f 40 2d e9 
//ldr    r0, [pc, #-0x20]          // +4 = 20 00 1f e5 
//ldr    r1, [r0]                  // +8 = 00 10 90 e5 
//ldr    r2, [pc, #-0x24]          // +0 = 24 20 1f e5 
//cmp    r1, r2                    // +4 = 02 00 51 e1 
//moveq  r3, #0                    // +8 = 00 30 a0 03 
//strheq r3, [r0]                  // +c = b0 30 c0 01 
//moveq  r3, #1                    // +10 = 01 30 a0 03 
//strbeq r3, [r0, #0xde]           // +14 = de 30 c0 05 
//ldr    r0, [pc, #-0x38]          // +18 = 38 00 1f e5 
//ldr    r1, [r0]                  // +1c = 00 10 90 e5 
//ldr    r2, [pc, #-0x3c]          // +20 = 3c 20 1f e5 
//cmp    r1, r2                    // +24 = 02 00 51 e1 
//ldreq  r3, [pc, #-0x40]          // +28 = 40 30 1f 05 
//streq  r3, [r0]                  // +2c = 00 30 80 05 
//add    r0, pc, #0x24             // +30 = 24 00 8f e2 
//ldr    r1, [r0]                  // +34 = 00 10 90 e5 
//cmp    r1, #1                    // +38 = 01 00 51 e3 
//popeq  {r0, r1, r2, r3, r4, pc}  // +3c = 1f 80 bd 08 
//ldr    r2, [r1]                  // +40 = 00 20 91 e5 
//ldr    r3, [r0, #4]              // +44 = 04 30 90 e5 
//cmp    r2, r3                    // +48 = 03 00 52 e1 
//ldreq  r4, [r0, #8]              // +4c = 08 40 90 05 
//streq  r4, [r1]                  // +50 = 00 40 81 05 
//add    r0, r0, #0xc              // +54 = 0c 00 80 e2 
//b      #4                        // +58 = f5 ff ff ea 
//andseq r0, r8, #0x14000          // +5c = 14 0a 18 02 
//bvs    #0x603ba8                 // +60 = e8 0e 18 6a 
//bvs    #0x1188c                  // +64 = 20 46 00 6a 
//andseq r0, r8, #0xc0000          // +68 = c0 0a 18 02 
//bvs    #0x603bb4                 // +6c = e8 0e 18 6a 
//bvs    #0x118c8                  // +70 = 2c 46 00 6a 
//andseq r0, r8, #0x1b000          // +74 = 6c 0b 18 02 
//bvs    #0x603bc0                 // +78 = e8 0e 18 6a 
//bvs    #0x11904                  // +7c = 38 46 00 6a 
//andseq r4, sl, #0xa0000003       // +80 = e8 43 1a 02 
//bvs    #0x68e97c                 // +84 = 54 3a 1a 6a 
//bvs    #0x11940                  // +88 = 44 46 00 6a 
//andeq  r0, r0, r1                // +8c = 01 00 00 00 

.byte 0x1F, 0x40, 0x2D, 0xE9, 0x20, 0x00, 0x1F, 0xE5, 0x00, 0x10, 0x90, 0xE5
.byte 0x24, 0x20, 0x1F, 0xE5, 0x02, 0x00, 0x51, 0xE1, 0x00, 0x30, 0xA0, 0x03, 0xB0, 0x30, 0xC0, 0x01
.byte 0x01, 0x30, 0xA0, 0x03, 0xDE, 0x30, 0xC0, 0x05, 0x38, 0x00, 0x1F, 0xE5, 0x00, 0x10, 0x90, 0xE5
.byte 0x3C, 0x20, 0x1F, 0xE5, 0x02, 0x00, 0x51, 0xE1, 0x40, 0x30, 0x1F, 0x05, 0x00, 0x30, 0x80, 0x05
.byte 0x24, 0x00, 0x8F, 0xE2, 0x00, 0x10, 0x90, 0xE5, 0x01, 0x00, 0x51, 0xE3, 0x1F, 0x80, 0xBD, 0x08
.byte 0x00, 0x20, 0x91, 0xE5, 0x04, 0x30, 0x90, 0xE5, 0x03, 0x00, 0x52, 0xE1, 0x08, 0x40, 0x90, 0x05
.byte 0x00, 0x40, 0x81, 0x05, 0x0C, 0x00, 0x80, 0xE2, 0xF5, 0xFF, 0xFF, 0xEA, 0x14, 0x0A, 0x18, 0x02
.byte 0xE8, 0x0E, 0x18, 0x6A, 0x20, 0x46, 0x00, 0x6A, 0xC0, 0x0A, 0x18, 0x02, 0xE8, 0x0E, 0x18, 0x6A
.byte 0x2C, 0x46, 0x00, 0x6A, 0x6C, 0x0B, 0x18, 0x02, 0xE8, 0x0E, 0x18, 0x6A, 0x38, 0x46, 0x00, 0x6A
.byte 0xE8, 0x43, 0x1A, 0x02, 0x54, 0x3A, 0x1A, 0x6A, 0x44, 0x46, 0x00, 0x6A, 0x01, 0x00, 0x00, 0x00
.endif

.org 0x02004EA4

// b something, open it up in desmume when u get it working
//.byte 0xEE, 0xFD, 0xFF, 0xEA
b patch

.close
